// Code generated by mockery v2.8.0. DO NOT EDIT.

package test

import (
	kafka "github.com/confluentinc/confluent-kafka-go/kafka"
	mock "github.com/stretchr/testify/mock"
)

// MockProducer is an autogenerated mock type for the Producer type
type MockProducer struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockProducer) Close() {
	_m.Called()
}

// Events provides a mock function with given fields:
func (_m *MockProducer) Events() chan kafka.Event {
	ret := _m.Called()

	var r0 chan kafka.Event
	if rf, ok := ret.Get(0).(func() chan kafka.Event); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan kafka.Event)
		}
	}

	return r0
}

// Produce provides a mock function with given fields: _a0, _a1
func (_m *MockProducer) Produce(_a0 *kafka.Message, _a1 chan kafka.Event) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*kafka.Message, chan kafka.Event) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
